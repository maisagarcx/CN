function [b, R2, sigma2] = regressaoLinearMultipla(n, v, p, x, y)
    sxx = zeros(p,p);
    sxy = zeros(p);
    U = zeros(p,p);
    u = zeros(n);
    d = zeros(n);
    if (v>1)&&((v+1)~=p)
        prompt = "Modelo Invalido";
        error(prompt);
        return;
    end
    %for i=1:n % inclusao de uma coluna de 1s relativa a b⁰
        %for j=v+1:-1:2
            %x(i,j)=x(i,j-1);
        %end
        %x(i,1)=1;
    %end
    % disp(x);
    if (v==1)&&(p>2) % ou seja, se regressao polinomial, entao gera potenciais de x
        for j=2:p-1
            for i=1:n
                x(i,j+1)=x(i,2)^j; % ^j
            end
        end
    end
    % U = zeros(p, p);
    for i=1:p % equacoes normais
        for j=1:p
            summy=0;
            for k=1:n
                summy=summy+x(k,i)*x(k,j);
            end
            sxx(i,j)=summy; % matriz dos coeficientes
        end
        summy=0;
        for k=1:n
            summy=summy+x(k,i)*y(k);
        end
        sxy(i)=summy; % vetor dos termos independentes
    end
    L = cholesky(p, sxx); % p = ordem, sxx = matriz
    t = suc_subst(p, L, sxy); % L = lower
    for i=1:p
        for j=1:i
            U(j,i)=L(i,j); % U = L transposta
        end
    end
    b = ret_subst(U, t);
    D=0;
    sy2 = 0;
    for i=1:n
        summy=0;
        for j=1:p
            summy=summy+b(j)*x(i,j);
        end
        u(i)=summy;
        d(i)=y(i)-u(i);
        D=D+d(i)^2;
        sy2=sy2+y(i)^2;
    end
    R2=1-D/(sy2-sxy(1)^2/n); % coeficiente de determinacao
    sigma2= D/(n-p); % variancia residual
end
